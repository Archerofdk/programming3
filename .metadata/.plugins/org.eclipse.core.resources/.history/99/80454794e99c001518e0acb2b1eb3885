

package server;
 
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URL;
 
import javax.imageio.ImageIO;
import common.ByteArrayConversion;
 
public class Image_Server {
 
	private static final int port = 6666;
	private static final String ONESHOTNAME = "oneshotimage.jpg";
	private static byte[] byteImage;
 
	/**
	 * @param args
	 * @param ONESHOTNAME 
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
 
		ServerSocket server = null;
 
		try {
			server = new ServerSocket(port);
			System.out.println("Server socket ready on port: " + port);
		} catch (IOException e) {
			System.err.println("Could not listen on port: " + port);
			System.exit(-1);
		}
 
		Socket socket = server.accept();
 
		/*
		 * The following gets the latest image from the camera.* 
		 */
		URL url = new URL("http://camera3:8080/" + ONESHOTNAME);				
		BufferedImage bufferedImage = ImageIO.read(url);		
		byteImage = ByteArrayConversion.toByteArray(bufferedImage);	
 
		System.out.println(byteImage.toString());
 
		OutputStream os = socket.getOutputStream();
 
		ObjectOutputStream oos = new ObjectOutputStream(os);
		oos.writeObject(byteImage);
	}
}